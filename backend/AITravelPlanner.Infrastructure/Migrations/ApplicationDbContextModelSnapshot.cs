// <auto-generated />
using System;
using AITravelPlanner.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AITravelPlanner.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.Accommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CostPerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TravelPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("TravelPlanId");

                    b.ToTable("Accommodations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "15 Place Vendôme, 75001 Paris, France",
                            CheckInDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2024, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CostPerNight = 800m,
                            Description = "Luxury hotel in the heart of Paris",
                            Name = "Hotel Ritz Paris",
                            TravelPlanId = 1,
                            Type = "Hotel"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Shibuya, Tokyo, Japan",
                            CheckInDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2024, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CostPerNight = 50m,
                            Description = "Traditional Japanese capsule hotel experience",
                            Name = "Capsule Hotel",
                            TravelPlanId = 2,
                            Type = "Hostel"
                        });
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TravelPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelPlanId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Sightseeing",
                            Cost = 30m,
                            Description = "Visit the iconic Eiffel Tower",
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            Location = "Eiffel Tower, Paris",
                            Name = "Eiffel Tower Visit",
                            ScheduledDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelPlanId = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Culture",
                            Cost = 17m,
                            Description = "Explore the world's largest art museum",
                            Duration = new TimeSpan(0, 3, 0, 0, 0),
                            Location = "Louvre Museum, Paris",
                            Name = "Louvre Museum",
                            ScheduledDate = new DateTime(2024, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelPlanId = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = "Sightseeing",
                            Cost = 0m,
                            Description = "Experience the world's busiest pedestrian crossing",
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Location = "Shibuya, Tokyo",
                            Name = "Shibuya Crossing",
                            ScheduledDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelPlanId = 2
                        });
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.Transportation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Provider")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ToLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TravelPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("TravelPlanId");

                    b.ToTable("Transportations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalTime = new DateTime(2024, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Cost = 800m,
                            DepartureTime = new DateTime(2024, 6, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FromLocation = "New York",
                            Notes = "Direct flight to Charles de Gaulle Airport",
                            Provider = "Air France",
                            ToLocation = "Paris",
                            TravelPlanId = 1,
                            Type = "Flight"
                        },
                        new
                        {
                            Id = 2,
                            ArrivalTime = new DateTime(2024, 7, 2, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Cost = 1200m,
                            DepartureTime = new DateTime(2024, 7, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FromLocation = "Los Angeles",
                            Notes = "Direct flight to Narita Airport",
                            Provider = "Japan Airlines",
                            ToLocation = "Tokyo",
                            TravelPlanId = 2,
                            Type = "Flight"
                        });
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.TravelPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AIRecommendations")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TravelStyle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TravelPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 5000m,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A romantic week in the City of Light",
                            Destination = "Paris, France",
                            EndDate = new DateTime(2024, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupSize = "Couple",
                            IsPublic = true,
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Romantic Paris Getaway",
                            TravelStyle = "Luxury"
                        },
                        new
                        {
                            Id = 2,
                            Budget = 3000m,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Exploring the vibrant culture of Tokyo",
                            Destination = "Tokyo, Japan",
                            EndDate = new DateTime(2024, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupSize = "Solo",
                            IsPublic = true,
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Tokyo Adventure",
                            TravelStyle = "Adventure"
                        });
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.Accommodation", b =>
                {
                    b.HasOne("AITravelPlanner.Domain.Entities.TravelPlan", "TravelPlan")
                        .WithMany("Accommodations")
                        .HasForeignKey("TravelPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelPlan");
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.Activity", b =>
                {
                    b.HasOne("AITravelPlanner.Domain.Entities.TravelPlan", "TravelPlan")
                        .WithMany("Activities")
                        .HasForeignKey("TravelPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelPlan");
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.Transportation", b =>
                {
                    b.HasOne("AITravelPlanner.Domain.Entities.TravelPlan", "TravelPlan")
                        .WithMany("Transportations")
                        .HasForeignKey("TravelPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelPlan");
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.TravelPlan", b =>
                {
                    b.HasOne("AITravelPlanner.Domain.Entities.User", "User")
                        .WithMany("TravelPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.TravelPlan", b =>
                {
                    b.Navigation("Accommodations");

                    b.Navigation("Activities");

                    b.Navigation("Transportations");
                });

            modelBuilder.Entity("AITravelPlanner.Domain.Entities.User", b =>
                {
                    b.Navigation("TravelPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
